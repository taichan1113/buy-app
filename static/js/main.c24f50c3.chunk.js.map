{"version":3,"sources":["components/tab.jsx","components/buylist.jsx","components/buylists.jsx","components/stock.jsx","components/fridge.jsx","App.js","serviceWorker.js","index.js"],"names":["Tab","Fragment","className","this","props","tabs","map","tab","onClick","activeTab","id","active","key","name","comp","lists","stocks","toggleSelect","addItem","item","handleChange","deleteItem","deleteAll","toFridge","eatStocks","Component","BuyList","selected","icon","BuyLists","onSubmit","e","type","placeholder","value","autoFocus","onChange","list","Stock","dangerLevel","date","dt","Date","parse","now","setDate","getDate","stock","Fridge","App","tabId","state","setState","listId","preventDefault","trim","getUniqueId","push","target","splice","indexOf","window","confirm","lists_new","filter","myDate","getTime","toString","Math","random","getFullYear","getMonth","localStorage","setItem","JSON","stringify","getItem","Boolean","location","hostname","match","library","add","fab","fas","far","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.c24f50c3.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Tab extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ul className=\"tabs\">\r\n          {this.props.tabs.map((tab) => (\r\n            <li\r\n              onClick={() => this.props.activeTab(tab.id)}\r\n              className={[tab.active ? \"active\" : \"inactive\"]}\r\n              key={tab.id}\r\n            >\r\n              {tab.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"contents\">\r\n          {this.props.tabs.map((tab) => (\r\n            <section\r\n              className={[tab.active ? \"active\" : \"inactive\"]}\r\n              key={tab.id}\r\n            >\r\n              <tab.comp\r\n                lists={this.props.lists}\r\n                stocks={this.props.stocks}\r\n                toggleSelect={this.props.toggleSelect}\r\n                addItem={this.props.addItem}\r\n                item={this.props.item}\r\n                handleChange={this.props.handleChange}\r\n                deleteItem={this.props.deleteItem}\r\n                deleteAll={this.props.deleteAll}\r\n                toFridge={this.props.toFridge}\r\n                eatStocks={this.props.eatStocks}\r\n              />\r\n            </section>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass BuyList extends Component {\r\n  render() {\r\n    return (\r\n      <li className=\"buylist\">\r\n        <div>\r\n          <p\r\n            onClick={() => this.props.toggleSelect(this.props.item.id)}\r\n            className={this.props.item.selected ? \"selected\" : \"\"}\r\n          >\r\n            {this.props.item.name}\r\n          </p>\r\n          <span>\r\n            <FontAwesomeIcon\r\n              icon={[\"fas\", \"trash\"]}\r\n              onClick={() => this.props.deleteItem(this.props.item)}\r\n            />\r\n          </span>\r\n        </div>\r\n      </li>\r\n    );\r\n  }\r\n}\r\nexport default BuyList;\r\n","import React, { Component } from \"react\";\r\nimport BuyList from \"./buylist\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Fragment } from \"react\";\r\n\r\nclass BuyLists extends Component {\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <form className=\"list-input\" onSubmit={(e) => this.props.addItem(e)}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"input buy list\"\r\n            value={this.props.item}\r\n            autoFocus ={!this.props.item}\r\n            onChange={(e) => this.props.handleChange(e)}\r\n          />\r\n          <button type=\"submit\">\r\n            <FontAwesomeIcon icon={[\"fas\", \"cart-arrow-down\"]} />\r\n          </button>\r\n        </form>\r\n        <ul>\r\n          {this.props.lists.map((list) => (\r\n            <BuyList\r\n              key={list.id}\r\n              item={list}\r\n              toggleSelect={this.props.toggleSelect}\r\n              deleteItem={this.props.deleteItem}\r\n            />\r\n          ))}\r\n        </ul>\r\n        <div className=\"btn\" onClick={() => this.props.toFridge()}>\r\n          To Stocks\r\n        </div>\r\n        <div className=\"btn\" onClick={() => this.props.deleteAll()}>\r\n          Clear All\r\n        </div>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuyLists;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nclass Stock extends Component {\r\n  dangerLevel = (date) => {\r\n    let dt = new Date(Date.parse(date));\r\n    let level;\r\n    const now = new Date();\r\n    if (dt.setDate(dt.getDate() + 14) <= now) {\r\n      level = \"warning\";\r\n    } else if (dt.setDate(dt.getDate() + 7) <= now) {\r\n      level = \"caution\";\r\n    } else {\r\n      level = \"notice\";\r\n    }\r\n    return level;\r\n  };\r\n  render() {\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <td className={this.dangerLevel(this.props.stock.date)}>\r\n            {this.props.stock.name}\r\n          </td>\r\n          <td className={this.dangerLevel(this.props.stock.date)}>\r\n            {this.props.stock.date}\r\n          </td>\r\n          <td className={this.dangerLevel(this.props.stock.date)}>\r\n            <FontAwesomeIcon\r\n              icon={[\"fas\", \"utensils\"]}\r\n              onClick={() => this.props.eatStocks(this.props.stock)}\r\n            />\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stock;\r\n","import React, { Component } from \"react\";\r\nimport Stock from \"./stock\";\r\n\r\nclass Fridge extends Component {\r\n  render() {\r\n    return (\r\n      <div id=\"table-container\">\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th>name</th>\r\n              <th>purchased at</th>\r\n              <th>eat</th>\r\n            </tr>\r\n          </thead>\r\n          {this.props.stocks.map((stock) => (\r\n            <Stock key={stock.id} stock={stock} eatStocks={this.props.eatStocks} />\r\n          ))}\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fridge;\r\n","import React, { Component } from \"react\";\r\nimport Tab from \"./components/tab\";\r\nimport BuyLists from \"./components/buylists\";\r\nimport Fridge from \"./components/fridge\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tabs: [\r\n        { id: 1, name: \"Lists\", active: true, comp: BuyLists },\r\n        { id: 2, name: \"Stocks\", active: false, comp: Fridge },\r\n      ],\r\n      item: \"\",\r\n      lists: [],\r\n      stocks: [],\r\n    };\r\n  }\r\n\r\n  activeTab = (tabId) => {\r\n    const tabs = [...this.state.tabs];\r\n    tabs.map((tab) => {\r\n      tab.active = tab.id === tabId;\r\n    });\r\n    this.setState({ tabs: tabs });\r\n  };\r\n  toggleSelect = (listId) => {\r\n    const lists = [...this.state.lists];\r\n    lists.map((list) => {\r\n      list.selected = list.id === listId ? !list.selected : list.selected;\r\n    });\r\n    this.setState({ lists: lists });\r\n  };\r\n  addItem = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.item.trim() === \"\") {\r\n      return;\r\n    }\r\n    const item = {\r\n      id: this.getUniqueId(),\r\n      name: this.state.item,\r\n      selected: false,\r\n    };\r\n    const lists = [...this.state.lists];\r\n    lists.push(item);\r\n    this.setState({ lists: lists, item: \"\" });\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ item: e.target.value });\r\n  };\r\n  deleteItem = (item) => {\r\n    const lists = [...this.state.lists];\r\n    lists.splice(lists.indexOf(item), 1);\r\n    this.setState({ lists: lists });\r\n  };\r\n  deleteAll = () => {\r\n    let ans = window.confirm(\"Clear all unselected lists?\");\r\n    if (!ans) {\r\n      return;\r\n    } else {\r\n      const lists = [...this.state.lists];\r\n      const lists_new = lists.filter((list) => list.selected);\r\n      this.setState({ lists: lists_new });\r\n    }\r\n  };\r\n  toFridge = () => {\r\n    const lists = [...this.state.lists];\r\n    let stocks = [...this.state.stocks];\r\n    const lists_new = lists.filter((list) => !list.selected);\r\n    const stocks_add = lists.filter((list) => list.selected);\r\n    stocks_add.map((stock) => {\r\n      stocks.push({\r\n        id: this.getUniqueId(),\r\n        name: stock.name,\r\n        date: this.myDate(),\r\n      });\r\n    });\r\n    this.setState({ lists: lists_new, stocks: stocks });\r\n  };\r\n  eatStocks = (stock) => {\r\n    const stocks = [...this.state.stocks];\r\n    stocks.splice(stocks.indexOf(stock), 1);\r\n    this.setState({ stocks: stocks });\r\n  };\r\n  getUniqueId() {\r\n    return new Date().getTime().toString(36) + \"-\" + Math.random().toString(36);\r\n  }\r\n  myDate() {\r\n    let now = new Date();\r\n    return `${now.getFullYear()}/${now.getMonth() + 1}/${now.getDate()}`;\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem('lists', JSON.stringify(this.state.lists));\r\n    localStorage.setItem('stocks', JSON.stringify(this.state.stocks));\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      lists: JSON.parse(localStorage.getItem('lists')) || [],\r\n      stocks: JSON.parse(localStorage.getItem('stocks')) || []\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Tab\r\n          tabs={this.state.tabs}\r\n          activeTab={this.activeTab}\r\n          lists={this.state.lists}\r\n          stocks={this.state.stocks}\r\n          toggleSelect={this.toggleSelect}\r\n          addItem={this.addItem}\r\n          item={this.state.item}\r\n          handleChange={this.handleChange}\r\n          deleteItem={this.deleteItem}\r\n          deleteAll={this.deleteAll}\r\n          toFridge={this.toFridge}\r\n          eatStocks={this.eatStocks}\r\n        ></Tab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nimport { library } from '@fortawesome/fontawesome-svg-core'; //fontawesomeのコアファイル\r\nimport { fab } from '@fortawesome/free-brands-svg-icons'; //fontawesomeのbrandアイコンのインポート\r\nimport { fas } from '@fortawesome/free-solid-svg-icons'; //fontawesomeのsolidアイコンのインポート\r\nimport { far } from '@fortawesome/free-regular-svg-icons'; //fontawesomeのregularアイコンのインポート\r\nlibrary.add(fab, fas, far); //他のコンポーネントから簡単に呼び出せるようにするための登録処理？\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}