{"version":3,"sources":["components/tab.jsx","components/buylist.jsx","components/buylists.jsx","components/stock.jsx","components/fridge.jsx","App.js","serviceWorker.js","index.js"],"names":["Tab","Fragment","className","this","props","tabs","map","tab","onClick","activeTab","id","active","key","name","onDragEnd","comp","lists","stocks","toggleSelect","addItem","item","handleChange","deleteItem","deleteAll","toFridge","addStock","eatStocks","Component","BuyList","draggableId","index","provided","draggableProps","dragHandleProps","ref","innerRef","selected","icon","BuyLists","onSubmit","e","type","placeholder","value","autoFocus","onChange","droppableId","droppableProps","list","Stock","dangerLevel","date","dt","Date","parse","now","setDate","getDate","stock","Fridge","App","tabId","state","setState","listId","preventDefault","trim","getUniqueId","push","target","splice","indexOf","window","confirm","lists_new","filter","myDate","result","source","destination","console","log","items","Array","from","newItems","getTime","toString","Math","random","getFullYear","getMonth","localStorage","setItem","JSON","stringify","getItem","Boolean","location","hostname","match","library","add","fab","fas","far","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.da212c3c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\n\r\nclass Tab extends Component {\r\n\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <ul className=\"tabs\">\r\n          {this.props.tabs.map((tab) => (\r\n            <li\r\n              onClick={() => this.props.activeTab(tab.id)}\r\n              className={[tab.active ? \"active\" : \"inactive\"]}\r\n              key={tab.id}\r\n            >\r\n              {tab.name}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n        <div className=\"contents\">\r\n          {this.props.tabs.map((tab) => (\r\n            <section\r\n              className={[tab.active ? \"active\" : \"inactive\"]}\r\n              key={tab.id}\r\n            >\r\n              <DragDropContext onDragEnd={this.props.onDragEnd}>\r\n                <tab.comp\r\n                  lists={this.props.lists}\r\n                  stocks={this.props.stocks}\r\n                  toggleSelect={this.props.toggleSelect}\r\n                  addItem={this.props.addItem}\r\n                  item={this.props.item}\r\n                  handleChange={this.props.handleChange}\r\n                  deleteItem={this.props.deleteItem}\r\n                  deleteAll={this.props.deleteAll}\r\n                  toFridge={this.props.toFridge}\r\n                  addStock={this.props.addStock}\r\n                  eatStocks={this.props.eatStocks}\r\n                />\r\n              </DragDropContext>\r\n            </section>\r\n          ))}\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Tab;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nclass BuyList extends Component {\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.item.id} index={this.props.index}>\r\n        {(provided) => (\r\n          <li\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            className=\"buylist\"\r\n          >\r\n            <div>\r\n              <p\r\n                onClick={() => this.props.toggleSelect(this.props.item.id)}\r\n                className={this.props.item.selected ? \"selected\" : \"\"}\r\n              >\r\n                {this.props.item.name}\r\n              </p>\r\n              <span>\r\n                <FontAwesomeIcon\r\n                  icon={[\"fas\", \"trash\"]}\r\n                  onClick={() => this.props.deleteItem(this.props.item)}\r\n                />\r\n              </span>\r\n            </div>\r\n          </li>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\nexport default BuyList;\r\n","import React, { Component } from \"react\";\r\nimport BuyList from \"./buylist\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nclass BuyLists extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form className=\"list-input\" onSubmit={(e) => this.props.addItem(e)}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"input buy list\"\r\n            value={this.props.item}\r\n            autoFocus={!this.props.item}\r\n            onChange={(e) => this.props.handleChange(e)}\r\n          />\r\n          <button type=\"submit\">\r\n            <FontAwesomeIcon icon={[\"fas\", \"cart-arrow-down\"]} />\r\n          </button>\r\n        </form>\r\n        <Droppable droppableId={\"BuyLists\"} type={\"BuyLists\"}>\r\n          {(provided) => (\r\n            <ul {...provided.droppableProps} ref={provided.innerRef}>\r\n              {this.props.lists.map((list, index) => {\r\n                return (\r\n                  <BuyList\r\n                    key={list.id}\r\n                    index={index}\r\n                    item={list}\r\n                    toggleSelect={this.props.toggleSelect}\r\n                    deleteItem={this.props.deleteItem}\r\n                  />\r\n                );\r\n              })}\r\n              {provided.placeholder}\r\n            </ul>\r\n          )}\r\n        </Droppable>\r\n        <div className=\"btn\" onClick={() => this.props.toFridge()}>\r\n          To Stocks\r\n        </div>\r\n        <div className=\"btn\" onClick={() => this.props.deleteAll()}>\r\n          Clear All\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BuyLists;\r\n","import React, { Component } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\n\r\nclass Stock extends Component {\r\n  dangerLevel = (date) => {\r\n    let dt = new Date(Date.parse(date));\r\n    let level;\r\n    const now = new Date();\r\n    if (dt.setDate(dt.getDate() + 14) <= now) {\r\n      level = \"warning\";\r\n    } else if (dt.setDate(dt.getDate() + 7) <= now) {\r\n      level = \"caution\";\r\n    } else {\r\n      level = \"notice\";\r\n    }\r\n    return level;\r\n  };\r\n  render() {\r\n    return (\r\n      <Draggable draggableId={this.props.stock.id} index={this.props.index}>\r\n        {(provided) => (\r\n          <tr\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n          >\r\n            <td className={this.dangerLevel(this.props.stock.date) + ' ' + \"column1\"}>\r\n              {this.props.stock.name}\r\n            </td>\r\n            <td className={this.dangerLevel(this.props.stock.date) + ' ' + \"column2\"}>\r\n              {this.props.stock.date}\r\n            </td>\r\n            <td className={this.dangerLevel(this.props.stock.date) + ' ' + \"column3\"}>\r\n              <FontAwesomeIcon\r\n                icon={[\"fas\", \"utensils\"]}\r\n                onClick={() => this.props.eatStocks(this.props.stock)}\r\n              />\r\n            </td>\r\n          </tr>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stock;\r\n","import React, { Component } from \"react\";\r\nimport Stock from \"./stock\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Droppable } from \"react-beautiful-dnd\";\r\n\r\nclass Fridge extends Component {\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <form className=\"list-input\" onSubmit={(e) => this.props.addStock(e)}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"input stock\"\r\n            value={this.props.item}\r\n            autoFocus={!this.props.item}\r\n            onChange={(e) => this.props.handleChange(e)}\r\n          />\r\n          <button type=\"submit\">\r\n            <FontAwesomeIcon icon={[\"fas\", \"cart-arrow-down\"]} />\r\n          </button>\r\n        </form>\r\n        <div id=\"table-container\">\r\n          <Droppable droppableId={\"Fridge\"} type={\"Fridge\"}>\r\n            {(provided) => (\r\n              <table>\r\n                <thead>\r\n                  <tr>\r\n                    <th className=\"column1\">name</th>\r\n                    <th className=\"column2\">purchased at</th>\r\n                    <th className=\"column3\">eat</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {this.props.stocks.map((stock, index) => {\r\n                    return (\r\n                      <Stock\r\n                        key={stock.id}\r\n                        index={index}\r\n                        stock={stock}\r\n                        eatStocks={this.props.eatStocks}\r\n                      />\r\n                    );\r\n                  })}\r\n                  {provided.placeholder}\r\n                </tbody>\r\n              </table>\r\n            )}\r\n          </Droppable>\r\n        </div>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Fridge;\r\n","import React, { Component } from \"react\";\r\nimport Tab from \"./components/tab\";\r\nimport BuyLists from \"./components/buylists\";\r\nimport Fridge from \"./components/fridge\";\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      tabs: [\r\n        { id: 1, name: \"Lists\", active: true, comp: BuyLists },\r\n        { id: 2, name: \"Stocks\", active: false, comp: Fridge },\r\n      ],\r\n      item: \"\",\r\n      lists: [],\r\n      stocks: [],\r\n    };\r\n  }\r\n\r\n  activeTab = (tabId) => {\r\n    const tabs = [...this.state.tabs];\r\n    tabs.map((tab) => {\r\n      tab.active = tab.id === tabId;\r\n    });\r\n    this.setState({ tabs: tabs });\r\n  };\r\n  toggleSelect = (listId) => {\r\n    const lists = [...this.state.lists];\r\n    lists.map((list) => {\r\n      list.selected = list.id === listId ? !list.selected : list.selected;\r\n    });\r\n    this.setState({ lists: lists });\r\n  };\r\n  addItem = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.item.trim() === \"\") {\r\n      return;\r\n    }\r\n    const item = {\r\n      id: this.getUniqueId(),\r\n      name: this.state.item,\r\n      selected: false,\r\n    };\r\n    const lists = [...this.state.lists];\r\n    lists.push(item);\r\n    this.setState({ lists: lists, item: \"\" });\r\n  };\r\n  handleChange = (e) => {\r\n    this.setState({ item: e.target.value });\r\n  };\r\n  deleteItem = (item) => {\r\n    const lists = [...this.state.lists];\r\n    lists.splice(lists.indexOf(item), 1);\r\n    this.setState({ lists: lists });\r\n  };\r\n  deleteAll = () => {\r\n    let ans = window.confirm(\"Clear all unselected lists?\");\r\n    if (!ans) {\r\n      return;\r\n    } else {\r\n      const lists = [...this.state.lists];\r\n      const lists_new = lists.filter((list) => list.selected);\r\n      this.setState({ lists: lists_new });\r\n    }\r\n  };\r\n  toFridge = () => {\r\n    const lists = [...this.state.lists];\r\n    let stocks = [...this.state.stocks];\r\n    const lists_new = lists.filter((list) => !list.selected);\r\n    const stocks_add = lists.filter((list) => list.selected);\r\n    stocks_add.map((stock) => {\r\n      stocks.push({\r\n        id: this.getUniqueId(),\r\n        name: stock.name,\r\n        date: this.myDate(),\r\n      });\r\n    });\r\n    this.setState({ lists: lists_new, stocks: stocks });\r\n  };\r\n  addStock = (e) => {\r\n    e.preventDefault();\r\n    if (this.state.item.trim() === \"\") {\r\n      return;\r\n    }\r\n    const item = {\r\n      id: this.getUniqueId(),\r\n      name: this.state.item,\r\n      date: this.myDate(),\r\n    };\r\n    const stocks = [...this.state.stocks];\r\n    stocks.push(item);\r\n    this.setState({ stocks: stocks, item: \"\" });\r\n  };\r\n  eatStocks = (stock) => {\r\n    const stocks = [...this.state.stocks];\r\n    stocks.splice(stocks.indexOf(stock), 1);\r\n    this.setState({ stocks: stocks });\r\n  };\r\n  getUniqueId() {\r\n    return new Date().getTime().toString(36) + \"-\" + Math.random().toString(36);\r\n  }\r\n  myDate() {\r\n    let now = new Date();\r\n    return `${now.getFullYear()}/${now.getMonth() + 1}/${now.getDate()}`;\r\n  }\r\n\r\n  onDragEnd = (result) => {\r\n    const { draggableId, type, source, destination } = result;\r\n    console.log('---------------');\r\n    console.log(`draggableId is ${draggableId}`);\r\n    console.log(`type is ${type}`);\r\n    console.log(`source is`);\r\n    console.log(source);\r\n    console.log(`destination is`);\r\n    console.log(destination);\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n    if (\r\n      source.droppableId === destination.droppableId &&\r\n      source.index === destination.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n\r\n    const items = type === \"BuyLists\" ? Array.from(this.state.lists) : Array.from(this.state.stocks )\r\n    const newItems = Array.from(items);\r\n    newItems.splice(source.index, 1);\r\n    newItems.splice(destination.index, 0, items[source.index]);\r\n    console.log(items);\r\n    console.log(newItems);\r\n    type === \"BuyLists\" ? this.setState({lists: newItems}) : this.setState({stocks: newItems});\r\n    return;\r\n  };\r\n\r\n  componentDidUpdate() {\r\n    localStorage.setItem(\"lists\", JSON.stringify(this.state.lists));\r\n    localStorage.setItem(\"stocks\", JSON.stringify(this.state.stocks));\r\n  }\r\n  componentDidMount() {\r\n    this.setState({\r\n      lists: JSON.parse(localStorage.getItem(\"lists\")) || [],\r\n      stocks: JSON.parse(localStorage.getItem(\"stocks\")) || [],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <Tab\r\n          tabs={this.state.tabs}\r\n          activeTab={this.activeTab}\r\n          lists={this.state.lists}\r\n          stocks={this.state.stocks}\r\n          toggleSelect={this.toggleSelect}\r\n          addItem={this.addItem}\r\n          item={this.state.item}\r\n          handleChange={this.handleChange}\r\n          deleteItem={this.deleteItem}\r\n          deleteAll={this.deleteAll}\r\n          toFridge={this.toFridge}\r\n          addStock={this.addStock}\r\n          eatStocks={this.eatStocks}\r\n          onDragEnd={this.onDragEnd}\r\n        ></Tab>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { library } from \"@fortawesome/fontawesome-svg-core\"; //fontawesomeのコアファイル\r\nimport { fab } from \"@fortawesome/free-brands-svg-icons\"; //fontawesomeのbrandアイコンのインポート\r\nimport { fas } from \"@fortawesome/free-solid-svg-icons\"; //fontawesomeのsolidアイコンのインポート\r\nimport { far } from \"@fortawesome/free-regular-svg-icons\"; //fontawesomeのregularアイコンのインポート\r\nlibrary.add(fab, fas, far); //他のコンポーネントから簡単に呼び出せるようにするための登録処理？\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}